From e43d4ed56aab3448ab7a9bee804665da118b4bdf Mon Sep 17 00:00:00 2001
From: CI Assistant <yossi.ilkanaev@intel.com>
Date: Fri, 6 Jul 2018 11:44:17 +0200
Subject: [PATCH] Merge pull request #56 in SW_UGW/linux from
 feature/DRVLIB_SW-778-ieee1588-ptp-support to master

* commit '95abecb571d48dc753fe85915e9039a93fca0d7e':
  DRVLIB_SW-778: Remove the skb_put
  Bug Fix for External Timestamp Fifo not clearing
---
 drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
index 41fb48284397..b9a34c83c943 100644
--- a/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
+++ b/drivers/net/ethernet/lantiq/switch-api/mac/xgmac_ptp.c
@@ -332,8 +332,7 @@ static void tx_hwtstamp(struct mac_prv_data *pdata,
 		shhwtstamp->hwtstamp = ktime_get_real();
 
 	skb_complete_tx_timestamp(pdata->ptp_tx_skb, shhwtstamp);
-
-	skb_put(pdata->ptp_tx_skb, pdata->ptp_tx_skb->len);
+	pdata->ptp_tx_skb = NULL;
 }
 
 /* =========================== TX TIMESTAMP =========================== */
@@ -361,6 +360,9 @@ int xgmac_tx_hwts(void *pdev, struct sk_buff *skb)
 		if (IS_2STEP(pdata)) {
 			mac_dbg("2-Step\n");
 
+			if (pdata->ptp_tx_skb)
+				return -1;
+
 			pdata->ptp_tx_skb = skb_get(skb);
 
 			/* PTP Sync if we are Master TTSE=1 OSTC=0, OSTPA=0 */
@@ -378,7 +380,7 @@ int xgmac_tx_hwts(void *pdev, struct sk_buff *skb)
 
 			/* PTP Sync if we are Master TTSE=0 OSTC=1, OSTPA=0 */
 			rec_id = fifo_entry_add(pdev, 0, 1, 0, 0, 0, 0);
-			/* SNAPTYPESEL=0 TSMSTREN=1 TSEVNTEN = 0 */
+			/* SNAPTYPESEL=0 TSMSTREN=1 TSEVNTEN = 1 */
 			xgmac_ptp_txtstamp_mode(pdev, 0, 1, 1);
 		}
 
@@ -626,6 +628,11 @@ static void xgmac_extts_isr_handler(struct mac_prv_data *pdata,
 			event.index = 0;
 			event.timestamp = xgmac_get_auxtimestamp(pdata);
 			ptp_clock_event(pdata->ptp_clock, &event);
+		} else {
+			/* Make sure timestamp fifo is cleared
+			 * if any event happens after the testptp is exited
+			 */
+			xgmac_get_auxtimestamp(pdata);
 		}
 	}
 
@@ -635,6 +642,11 @@ static void xgmac_extts_isr_handler(struct mac_prv_data *pdata,
 			event.index = 1;
 			event.timestamp = xgmac_get_auxtimestamp(pdata);
 			ptp_clock_event(pdata->ptp_clock, &event);
+		} else {
+			/* Make sure timestamp fifo is cleared
+			 * if any event happens after the testptp is exited
+			 */
+			xgmac_get_auxtimestamp(pdata);
 		}
 	}
 

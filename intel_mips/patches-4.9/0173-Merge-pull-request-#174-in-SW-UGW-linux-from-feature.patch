From 2c529d37a7738a026922b06145f4eb2764f503ec Mon Sep 17 00:00:00 2001
From: CI Assistant <yossi.ilkanaev@intel.com>
Date: Wed, 12 Sep 2018 14:58:17 +0200
Subject: [PATCH] Merge pull request #174 in SW_UGW/linux from
 feature/PONRTSYS-1977-sw-image-for-sfu-b-supporting-qspi-needed to master

* commit 'eb07cd3ca44f3426d902e174b702355e5cdc6146':
  PONRTSYS-1977: gpio: intel-sso: Deactivate not used SOUT groups
  PONRTSYS-1977: gpio: intel-sso: Add GPIO get function
---
 drivers/gpio/gpio-intel-sso.c | 27 +++++++++++++++++++++------
 1 file changed, 21 insertions(+), 6 deletions(-)

diff --git a/drivers/gpio/gpio-intel-sso.c b/drivers/gpio/gpio-intel-sso.c
index b29aec2d536b..5f19fa31793b 100644
--- a/drivers/gpio/gpio-intel-sso.c
+++ b/drivers/gpio/gpio-intel-sso.c
@@ -121,6 +121,15 @@ sso_gpio_dir_out(struct gpio_chip *chip, unsigned int offset, int value)
 	return sso_gpio_update_bit(priv->mmap, SSO_CPU, offset, value);
 }
 
+static int sso_gpio_get(struct gpio_chip *chip, unsigned int offset)
+{
+	struct sso_gpio_priv *priv = gpiochip_get_data(chip);
+	u32 reg_val;
+
+	regmap_read(priv->mmap, SSO_CPU, &reg_val);
+	return !!(reg_val & BIT(offset));
+}
+
 static void sso_gpio_set(struct gpio_chip *chip, unsigned int offset, int value)
 {
 	struct sso_gpio_priv *priv = gpiochip_get_data(chip);
@@ -138,6 +147,7 @@ static int sso_gpio_gc_init(struct sso_gpio_priv *priv,
 	gc->free		= sso_gpio_free;
 	gc->get_direction	= sso_gpio_get_dir;
 	gc->direction_output	= sso_gpio_dir_out;
+	gc->get			= sso_gpio_get;
 	gc->set			= sso_gpio_set;
 
 	gc->label		= name;
@@ -153,19 +163,24 @@ static int sso_gpio_gc_init(struct sso_gpio_priv *priv,
 static int sso_gpio_hw_init(struct sso_gpio_priv *priv)
 {
 	int i;
+	int err;
+	u32 activate;
 
 	/* Clear all duty cycles */
 	for (i = 0; i < priv->pins; i++) {
-		if (sso_gpio_writel(priv->mmap, DUTY_CYCLE(i), 0))
-			return -ENOTSUPP;
+		err = sso_gpio_writel(priv->mmap, DUTY_CYCLE(i), 0);
+		if (err)
+			return err;
 	}
 
 	/* 4 groups for total 32 pins */
 	for (i = 1; i <= MAX_GROUP_NUM; i++) {
-		if (i * PINS_PER_GROUP <= priv->pins ||
-		    priv->pins > (i - 1) * PINS_PER_GROUP)
-			if (sso_gpio_update_bit(priv->mmap, SSO_CON1, i - 1, 1))
-				return -ENOTSUPP;
+		activate = !!(i * PINS_PER_GROUP <= priv->pins ||
+			      priv->pins > (i - 1) * PINS_PER_GROUP);
+		err = sso_gpio_update_bit(priv->mmap, SSO_CON1, i - 1,
+					  activate);
+		if (err)
+			return err;
 	}
 
 	/* NO HW directly controlled pin by default */

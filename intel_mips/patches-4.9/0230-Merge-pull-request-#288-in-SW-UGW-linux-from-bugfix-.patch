From 170577e368eab740dd6d42fee435c5df5cdd29c2 Mon Sep 17 00:00:00 2001
From: CI Assistant <yossi.ilkanaev@intel.com>
Date: Mon, 26 Nov 2018 07:23:16 +0100
Subject: [PATCH] Merge pull request #288 in SW_UGW/linux from
 bugfix/DRVLIB_SW-395-multicast_match_bigendian_fix to master

* commit '2b2922161d0bb20e97e2bcb1f31c0dc47826a1da':
  Display of IPv4 and IPv6 ip address in switch cli read is made proper
  Fix for Multicast Entry not match in Big Endian CPU
---
 .../net/ethernet/lantiq/switch-api/gsw_swmcast.c   | 104 ++++++++++++++++++---
 1 file changed, 92 insertions(+), 12 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c b/drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c
index 75d103878fa3..10dc3b43e1bb 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_swmcast.c
@@ -213,6 +213,7 @@ int gsw_get_swmcast_entry(void *cdev, GSW_multicastTableRead_t *parm, u32 loc)
 	ethsw_api_dev_t *gswdev = GSW_PDATA_GET(cdev);
 	pctbl_prog_t pcetable;
 	int i = 0;
+	GSW_IP_t IP;
 
 	if (gswdev == NULL)
 		return 0;
@@ -234,11 +235,6 @@ int gsw_get_swmcast_entry(void *cdev, GSW_multicastTableRead_t *parm, u32 loc)
 		for (i = 0; i < 8; i++)
 			parm->uIP_Gsa.nIPv6[i] = pcetable.key[11 + i];
 
-		if (parm->eIPVersion == GSW_IP_SELECT_IPV4) {
-			parm->uIP_Gda.nIPv4 = le32_to_cpu(parm->uIP_Gda.nIPv4);
-			parm->uIP_Gsa.nIPv4 = le32_to_cpu(parm->uIP_Gsa.nIPv4);
-		}
-
 		/* Action */
 		parm->nSubIfId = ((pcetable.val[1] >> 3) & 0x1FFF);
 
@@ -246,6 +242,31 @@ int gsw_get_swmcast_entry(void *cdev, GSW_multicastTableRead_t *parm, u32 loc)
 			parm->nPortMap[i] = pcetable.val[2 + i];
 		}
 
+		parm->eIPVersion = phtable[loc].ip_type;
+
+#if CONFIG_CPU_BIG_ENDIAN
+
+		if (parm->eIPVersion == GSW_IP_SELECT_IPV4) {
+			parm->uIP_Gda.nIPv4 = ((parm->uIP_Gda.nIPv6[1] << 16) |
+					       parm->uIP_Gda.nIPv6[0]);
+			parm->uIP_Gsa.nIPv4 = ((parm->uIP_Gsa.nIPv6[1] << 16) |
+					       parm->uIP_Gsa.nIPv6[0]);
+		} else if (parm->eIPVersion == GSW_IP_SELECT_IPV6) {
+			for (i = 0; i < 8; i++)
+				IP.nIPv6[i] = parm->uIP_Gda.nIPv6[7 - i];
+			
+			for (i = 0; i < 8; i++)
+				parm->uIP_Gda.nIPv6[i] = IP.nIPv6[i];
+
+			for (i = 0; i < 8; i++)
+				IP.nIPv6[i] = parm->uIP_Gsa.nIPv6[7 - i];
+			
+			for (i = 0; i < 8; i++)
+				parm->uIP_Gsa.nIPv6[i] = IP.nIPv6[i];			
+		}
+
+#endif
+		
 		parm->nPortId |= 0x8000;
 #ifdef __KERNEL__		
 		pr_debug("Got Loc        %d\n", loc);
@@ -300,6 +321,25 @@ static int set_pce_hash_table(void *cdev, MCAST_HASHTBL *phtable, u32 loc)
 	/* Pattern */
 	pcetable.key[2] |= phtable->key.fid & 0x3F;
 
+#if CONFIG_CPU_BIG_ENDIAN
+
+	if (phtable->ip_type == GSW_IP_SELECT_IPV4) {
+		pcetable.key[3] = phtable->key.dstip.nIPv6[1];
+		pcetable.key[4] = phtable->key.dstip.nIPv6[0];
+		pcetable.key[11] = phtable->key.srcip.nIPv6[1];
+		pcetable.key[12] = phtable->key.srcip.nIPv6[0];
+	} else if (phtable->ip_type == GSW_IP_SELECT_IPV6) {
+		for (i = 0; i < 8; i++) {
+			pcetable.key[3 + i] = phtable->key.dstip.nIPv6[7 - i];
+		}
+
+		for (i = 0; i < 8; i++) {
+			pcetable.key[11 + i] = phtable->key.srcip.nIPv6[7 - i];
+		}
+	}
+
+#else
+
 	for (i = 0; i < 8; i++) {
 		pcetable.key[3 + i] = phtable->key.dstip.nIPv6[i];
 	}
@@ -308,6 +348,8 @@ static int set_pce_hash_table(void *cdev, MCAST_HASHTBL *phtable, u32 loc)
 		pcetable.key[11 + i] = phtable->key.srcip.nIPv6[i];
 	}
 
+#endif
+
 	/* Action */
 	pcetable.val[1] = ((phtable->action.subifid & 0x1FFF) << 3);
 
@@ -343,19 +385,32 @@ int gsw_insert_hashtable_entry(void *cdev, GSW_multicastTable_t *parm)
 	portId = parm->nPortId;
 
 	if (parm->eIPVersion == GSW_IP_SELECT_IPV4) {
-		pattern.srcip.nIPv4 = cpu_to_le32(parm->uIP_Gsa.nIPv4);
-		pattern.dstip.nIPv4 = cpu_to_le32(parm->uIP_Gda.nIPv4);
-		pr_debug("portId = %d\n parm->eIPVersion = %d\n nSubIfId = %d\n uIP_Gsa.nIPv4 = %08x\n uIP_Gda.nIPv4 = %08x\n fid = %d\n bExclSrcIP = %d\n eModeMember = %d\n", parm->nPortId, parm->eIPVersion, parm->nSubIfId, parm->uIP_Gsa.nIPv4, parm->uIP_Gda.nIPv4,
-		       parm->nFID,  parm->bExclSrcIP, parm->eModeMember);
+
+		pattern.srcip.nIPv4 = parm->uIP_Gsa.nIPv4;
+		pattern.dstip.nIPv4 = parm->uIP_Gda.nIPv4;
+
+		pr_debug("portId = %d\n parm->eIPVersion = %d\n nSubIfId = %d\n uIP_Gsa.nIPv4 = %08x\n uIP_Gda.nIPv4 = %08x\n fid = %d\n bExclSrcIP = %d\n eModeMember = %d\n", parm->nPortId, parm->eIPVersion, parm->nSubIfId, pattern.srcip.nIPv4, pattern.dstip.nIPv4,
+			 parm->nFID,  parm->bExclSrcIP, parm->eModeMember);
 	} else if (parm->eIPVersion == GSW_IP_SELECT_IPV6) {
 
 		pr_debug("portId = %d\n parm->eIPVersion = %d\n nSubIfId = %d\n fid = %d\n bExclSrcIP = %d\n eModeMember = %d\n",
-		       parm->nPortId, parm->eIPVersion, parm->nSubIfId, parm->nFID,  parm->bExclSrcIP, parm->eModeMember);
+			 parm->nPortId, parm->eIPVersion, parm->nSubIfId, parm->nFID,  parm->bExclSrcIP, parm->eModeMember);
+
+#if CONFIG_CPU_BIG_ENDIAN
+
+		for (i = 0; i < 8; i++) {
+			pattern.srcip.nIPv6[i] = parm->uIP_Gsa.nIPv6[i];
+			pattern.dstip.nIPv6[i] = parm->uIP_Gda.nIPv6[i];
+		}
+
+#else
 
 		for (i = 0; i < 8; i++) {
 			pattern.srcip.nIPv6[i] = parm->uIP_Gsa.nIPv6[7 - i];
 			pattern.dstip.nIPv6[i] = parm->uIP_Gda.nIPv6[7 - i];
 		}
+
+#endif
 	}
 
 	pattern.fid = parm->nFID;
@@ -477,13 +532,26 @@ int gsw_search_hashtable_entry(void *cdev, GSW_multicastTable_t *parm, GSW_multi
 	portId = parm->nPortId;
 
 	if (parm->eIPVersion == GSW_IP_SELECT_IPV4) {
+
 		pattern.srcip.nIPv4 = parm->uIP_Gsa.nIPv4;
 		pattern.dstip.nIPv4 = parm->uIP_Gda.nIPv4;
+
 	} else if (parm->eIPVersion == GSW_IP_SELECT_IPV6) {
+#if CONFIG_CPU_BIG_ENDIAN
+
+		for (i = 0; i < 8; i++) {
+			pattern.srcip.nIPv6[i] = parm->uIP_Gsa.nIPv6[i];
+			pattern.dstip.nIPv6[i] = parm->uIP_Gda.nIPv6[i];
+		}
+
+#else
+
 		for (i = 0; i < 8; i++) {
 			pattern.srcip.nIPv6[i] = parm->uIP_Gsa.nIPv6[7 - i];
 			pattern.dstip.nIPv6[i] = parm->uIP_Gda.nIPv6[7 - i];
 		}
+
+#endif
 	}
 
 	pattern.fid = parm->nFID;
@@ -644,13 +712,25 @@ int gsw_remove_hashtable_entry(void *cdev, GSW_multicastTable_t *parm)
 	}
 
 	if (parm->eIPVersion == GSW_IP_SELECT_IPV4) {
-		pattern.srcip.nIPv4 = cpu_to_le32(parm->uIP_Gsa.nIPv4);
-		pattern.dstip.nIPv4 = cpu_to_le32(parm->uIP_Gda.nIPv4);
+		pattern.srcip.nIPv4 = parm->uIP_Gsa.nIPv4;
+		pattern.dstip.nIPv4 = parm->uIP_Gda.nIPv4;
+
 	} else if (parm->eIPVersion == GSW_IP_SELECT_IPV6) {
+#if CONFIG_CPU_BIG_ENDIAN
+
+		for (i = 0; i < 8; i++) {
+			pattern.srcip.nIPv6[i] = parm->uIP_Gsa.nIPv6[i];
+			pattern.dstip.nIPv6[i] = parm->uIP_Gda.nIPv6[i];
+		}
+
+#else
+
 		for (i = 0; i < 8; i++) {
 			pattern.srcip.nIPv6[i] = parm->uIP_Gsa.nIPv6[7 - i];
 			pattern.dstip.nIPv6[i] = parm->uIP_Gda.nIPv6[7 - i];
 		}
+
+#endif
 	}
 
 	pattern.fid = parm->nFID;

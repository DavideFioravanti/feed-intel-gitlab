From b1fa0b369512f1624f5c4f14a5ca230a75a12487 Mon Sep 17 00:00:00 2001
From: CI Assistant <yossi.ilkanaev@intel.com>
Date: Wed, 5 Dec 2018 10:13:15 +0100
Subject: [PATCH] Merge pull request #282 in SW_UGW/linux from
 bugfix/PONRTSYS-2713-meter-allocation-is-failing-for-prx321_sfu-model to
 master

* commit 'f39d096d5a4bee00b0b3c36f71ce5d25ca1b54f9':
  1. Meter alloc bug fix and pce pattern delete bug fix 2. remove white space
---
 drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c |  5 ++++-
 drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c  | 10 +++++++---
 2 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
index 72cd9efeda0b..96a21bc505e6 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_core.c
@@ -11323,7 +11323,8 @@ GSW_return_t GSW_MulticastTableEntryRead(void *cdev,
 				memset(parm, 0, sizeof(GSW_multicastTableRead_t));
 				parm->bLast = 1;
 				gswdev->msw_rinx_31 = 0;
-			}			
+			}
+
 			ret = GSW_statusOk;
 			goto UNLOCK_AND_RETURN;
 		}
@@ -25651,6 +25652,8 @@ GSW_return_t GSW_QOS_MeterAlloc(void *cdev, GSW_QoS_meterCfg_t *param)
 		goto UNLOCK_AND_RETURN;
 	}
 
+	ret = GSW_statusOk;
+
 UNLOCK_AND_RETURN:
 
 #ifdef __KERNEL__
diff --git a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c
index cf2a2651670e..b6bf9387345a 100644
--- a/drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c
+++ b/drivers/net/ethernet/lantiq/switch-api/gsw_flow_pce.c
@@ -1823,9 +1823,13 @@ int pce_pattern_delete(void *cdev, ltq_pce_table_t *pthandle, u32 index)
 	/* Ethertype */
 	IFX_PCE_TM_IDX_DELETE(0xFF, ptable->ethertype_idx,
 			      pce_tm_ptcl_tbl_delete)
-	/*  PPP Protocol */
-	IFX_PCE_TM_IDX_DELETE(0xFF, ptable->ppp_prot_idx,
-			      pce_tm_ptcl_tbl_delete)
+
+	if (IS_VRSN_30_31(gswdev->gipver)) {
+		/*  PPP Protocol */
+		IFX_PCE_TM_IDX_DELETE(0xFF, ptable->ppp_prot_idx,
+				      pce_tm_ptcl_tbl_delete)
+	}
+
 	/* PPPoE */
 	IFX_PCE_TM_IDX_DELETE(0xFF, ptable->pppoe_idx,
 			      pce_tm_pppoe_tbl_delete)

From e44370b2a224a0326a300b6484c1bbb3a43eb3dc Mon Sep 17 00:00:00 2001
From: Hua Ma <hua.ma@linux.intel.com>
Date: Thu, 21 Jun 2018 17:37:58 +0800
Subject: [PATCH] Add support for common mtd changes

---
 drivers/mtd/Kconfig           |  2 ++
 drivers/mtd/Makefile          |  1 +
 drivers/mtd/spi-nor/spi-nor.c | 11 ++++++++---
 include/linux/mtd/spi-nor.h   |  1 +
 4 files changed, 12 insertions(+), 3 deletions(-)

--- a/drivers/mtd/Kconfig
+++ b/drivers/mtd/Kconfig
@@ -375,6 +375,8 @@ source "drivers/mtd/lpddr/Kconfig"
 
 source "drivers/mtd/spi-nor/Kconfig"
 
+source "drivers/mtd/ltq-spinand/Kconfig"
+
 source "drivers/mtd/ubi/Kconfig"
 
 endif # MTD
--- a/drivers/mtd/Makefile
+++ b/drivers/mtd/Makefile
@@ -38,3 +38,4 @@ obj-y		+= chips/ lpddr/ maps/ devices/ n
 
 obj-$(CONFIG_MTD_SPI_NOR)	+= spi-nor/
 obj-$(CONFIG_MTD_UBI)		+= ubi/
+obj-$(CONFIG_MTD_LTQ_SPINAND)	+= ltq-spinand/
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -1011,18 +1011,22 @@ static const struct flash_info spi_nor_i
 	{ "mx25l4005a",  INFO(0xc22013, 0, 64 * 1024,   8, SECT_4K) },
 	{ "mx25l8005",   INFO(0xc22014, 0, 64 * 1024,  16, 0) },
 	{ "mx25l1606e",  INFO(0xc22015, 0, 64 * 1024,  32, SECT_4K) },
-	{ "mx25l3205d",  INFO(0xc22016, 0, 64 * 1024,  64, SECT_4K) },
+/*	{ "mx25l3205d",  INFO(0xc22016, 0, 64 * 1024,  64, SECT_4K) },*/
 	{ "mx25l3255e",  INFO(0xc29e16, 0, 64 * 1024,  64, SECT_4K) },
 	{ "mx25l6405d",  INFO(0xc22017, 0, 64 * 1024, 128, SECT_4K) },
 	{ "mx25u3235f",	 INFO(0xc22536, 0, 64 * 1024, 64, 0) },
 	{ "mx25u6435f",  INFO(0xc22537, 0, 64 * 1024, 128, SECT_4K) },
-	{ "mx25l12805d", INFO(0xc22018, 0, 64 * 1024, 256, 0) },
+	/* mx25l12805d and mx25l12835f has the same ID (mx25l12805d does not
+	 * support quad mode)
+	 */
+	{ "mx25l12835f", INFO(0xc22018, 0, 64 * 1024, 256, SECT_4K | SPI_NOR_QUAD_READ) },
 	{ "mx25l12855e", INFO(0xc22618, 0, 64 * 1024, 256, 0) },
 	{ "mx25l25635e", INFO(0xc22019, 0, 64 * 1024, 512, 0) },
 	{ "mx25u25635f", INFO(0xc22539, 0, 64 * 1024, 512, SECT_4K | SPI_NOR_4B_OPCODES) },
 	{ "mx25l25655e", INFO(0xc22619, 0, 64 * 1024, 512, 0) },
 	{ "mx66l51235l", INFO(0xc2201a, 0, 64 * 1024, 1024, SPI_NOR_QUAD_READ) },
 	{ "mx66l1g55g",  INFO(0xc2261b, 0, 64 * 1024, 2048, SPI_NOR_QUAD_READ) },
+	{ "mx25l3233f",  INFO(0xc22016, 0, 64 * 1024, 64, SPI_NOR_QUAD_READ) },
 
 	/* Micron */
 	{ "n25q016a",	 INFO(0x20bb15, 0, 64 * 1024,   32, SECT_4K | SPI_NOR_QUAD_READ) },
@@ -1697,10 +1701,12 @@ int spi_nor_scan(struct spi_nor *nor, co
 		nor->flash_read = SPI_NOR_DUAL;
 	}
 
+	nor->program_opcode = SPINOR_OP_PP;
 	/* Default commands */
 	switch (nor->flash_read) {
 	case SPI_NOR_QUAD:
 		nor->read_opcode = SPINOR_OP_READ_1_1_4;
+		nor->program_opcode = SPINOR_OP_PP_1_4_4;
 		break;
 	case SPI_NOR_DUAL:
 		nor->read_opcode = SPINOR_OP_READ_1_1_2;
@@ -1716,7 +1722,6 @@ int spi_nor_scan(struct spi_nor *nor, co
 		return -EINVAL;
 	}
 
-	nor->program_opcode = SPINOR_OP_PP;
 
 	if (info->addr_width)
 		nor->addr_width = info->addr_width;
